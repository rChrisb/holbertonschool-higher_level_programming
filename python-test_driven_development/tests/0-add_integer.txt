# tests/0-add_integer.txt

``add_integer()`` returns the addition of is arguments. For
integers and floats, that value is equivalent to using the ``+``
operator

::
	>>> add_integer = __import__('0-add_integer').add_integer
	>>> add_integer(8.5, 10)
	18
	>>> add_integer(int(float("nan")), 20)
	Traceback (most recent call last):
	...
	ValueError: cannot convert float NaN to integer
	>>> add_integer(8e911, 30)
	Traceback (most recent call last):
	...
	OverflowError: cannot convert float infinity to integer
	>>> add_integer(8, 40)
	48
	>>> add_integer(None, 50)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer
	>>> add_integer("8", 60)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer
	>>> add_integer(8,)
	106
	>>> add_integer()
	Traceback (most recent call last):
	...
	TypeError: add_integer() missing 1 required positional argument: 'a'


	
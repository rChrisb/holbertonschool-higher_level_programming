# tests/7-base-geometry.txt

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 1)
>>> bg.integer_validator("my_int", 0)
Traceback (most recent call last):
ValueError: my_int must be greater than 0
>>> bg.integer_validator("my_int", -2)
Traceback (most recent call last):
ValueError: my_int must be greater than 0
>>> bg.integer_validator("my_int", "StopCheating")
Traceback (most recent call last):
TypeError: my_int must be an integer
>>> bg.integer_validator("my_int", (4,))
Traceback (most recent call last):
TypeError: my_int must be an integer
>>> bg.integer_validator("my_int")
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.area()
Traceback (most recent call last):
Exception: area() is not implemented

>>> bg.integer_validator("my_int", [3])
Traceback (most recent call last):
TypeError: my_int must be an integer
>>> bg.integer_validator("my_int", True)
Traceback (most recent call last):
TypeError: my_int must be an integer
>>> bg.integer_validator("my_int", {3,4})
Traceback (most recent call last):
TypeError: my_int must be an integer
>>> bg.integer_validator("my_int", None)
Traceback (most recent call last):
TypeError: my_int must be an integer